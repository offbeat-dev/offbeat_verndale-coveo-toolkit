{"version":3,"sources":["webpack://@verndale/toolkit/./node_modules/@coveo/atomic/dist/esm/atomic-search-box-instant-results.entry.js","webpack://@verndale/toolkit/./node_modules/@coveo/atomic/dist/esm/string-utils-5695e07f.js"],"names":[],"mappings":"oRASA,KAAM,GAAgC,KAAM,CAC1C,YAAY,EAAS,CACnB,QAAiB,KAAM,GACvB,KAAK,QAAU,GAEjB,mBAAoB,CAClB,GAAI,CACF,QAAmC,GACjC,MAAK,SAAW,EACT,KAAK,cACX,KAAK,YAEH,EAAP,CACE,KAAK,MAAQ,GAGjB,aAAc,CACZ,MAAK,MAAK,SAAS,iBAMZ,MAHc,eAAe,MAAM,QAAQ,OAC9C,KAAK,eAAe,MAAM,QAC1B,KAAK,SACM,IAAK,GAAY,EAC9B,IAAK,kBAAkB,QAAc,EAAO,SAC5C,MAAO,GACP,QAAS,QAAE,MAAO,CAAE,MAAO,+BAAiC,EAAO,OACnE,SAAU,IAAM,MATT,GAcX,YAAa,CACX,YAAK,eAAiB,QAAG,KAAK,SAAS,OAAQ,CAC7C,QAAS,CACP,mBAAoB,KAGjB,CACL,SAAU,MAAM,KAAK,KAAK,KAAK,WAAW,UAAU,QAAQ,KAAK,MACjE,MAAO,QACP,uBAAyB,GACvB,MAAK,eAAe,YAAY,GACzB,KAAK,0BAEd,YAAa,IAAM,KAAK,eAG5B,wBAAyB,CACvB,MAAO,IAAI,SAAS,GAAY,CAC9B,KAAM,GAAc,KAAK,eAAe,UAAU,IAAM,CACtD,KAAM,GAAQ,KAAK,eAAe,MAC7B,EAAM,WACL,GAAM,QAAQ,QAChB,MAAK,QAAU,EAAM,SAEvB,IACA,SAKR,QAAS,CACP,GAAI,KAAK,MACP,MAAQ,QAAE,yBAA0B,CAAE,QAAS,KAAK,KAAM,MAAO,KAAK,WAGtE,OAAO,CAAE,MAAO,QAAW,S,6EC5EjC,WAAqB,EAAO,CAC1B,MAAO,GAAM,QAAQ,wBAAyB,QAEhD,WAAuB,EAAK,CAC1B,GAAI,GACJ,MAAQ,GAAK,EACV,MAAM,mBAAqB,MAAQ,IAAO,OAAS,OAAS,EAAG,KAAK,IAAI,QAAQ,MAAO,KAAK","file":"scripts/8096.bundle.js","sourcesContent":["import { r as registerInstance, h, g as getElement } from './index-a326e2b3.js';\nimport { U as UP } from './headless.esm-36d42fef.js';\nimport { d as dispatchSearchBoxSuggestionsEvent } from './suggestions-common-917463d6.js';\nimport { c as cleanUpString } from './string-utils-5695e07f.js';\nimport './event-utils-5d69ba8f.js';\nimport './utils-2f0ee174.js';\nimport './purify-e45d59ef.js';\nimport './_commonjsHelpers-5ec8f9b7.js';\n\nconst AtomicSearchBoxInstantResults = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.results = [];\n  }\n  componentWillLoad() {\n    try {\n      dispatchSearchBoxSuggestionsEvent((bindings) => {\n        this.bindings = bindings;\n        return this.initialize();\n      }, this.host);\n    }\n    catch (error) {\n      this.error = error;\n    }\n  }\n  renderItems() {\n    if (!this.bindings.suggestedQuery()) {\n      return [];\n    }\n    const results = this.instantResults.state.results.length\n      ? this.instantResults.state.results\n      : this.results;\n    return results.map((result) => ({\n      key: `instant-result-${cleanUpString(result.title)}`,\n      query: '',\n      content: h(\"div\", { class: \"flex items-center break-all\" }, result.title),\n      onSelect: () => {\n        // TODO: ADD LOGS?\n      },\n    }));\n  }\n  initialize() {\n    this.instantResults = UP(this.bindings.engine, {\n      options: {\n        maxResultsPerQuery: 4,\n      },\n    });\n    return {\n      position: Array.from(this.host.parentNode.children).indexOf(this.host),\n      panel: 'right',\n      onSuggestedQueryChange: (q) => {\n        this.instantResults.updateQuery(q);\n        return this.onSuggestedQueryChange();\n      },\n      renderItems: () => this.renderItems(),\n    };\n  }\n  onSuggestedQueryChange() {\n    return new Promise((resolve) => {\n      const unsubscribe = this.instantResults.subscribe(() => {\n        const state = this.instantResults.state;\n        if (!state.isLoading) {\n          if (state.results.length) {\n            this.results = state.results;\n          }\n          unsubscribe();\n          resolve();\n        }\n      });\n    });\n  }\n  render() {\n    if (this.error) {\n      return (h(\"atomic-component-error\", { element: this.host, error: this.error }));\n    }\n  }\n  get host() { return getElement(this); }\n};\n\nexport { AtomicSearchBoxInstantResults as atomic_search_box_instant_results };\n\n//# sourceMappingURL=atomic-search-box-instant-results.entry.js.map","function regexEncode(value) {\n  return value.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&');\n}\nfunction cleanUpString(str) {\n  var _a;\n  return (_a = str\n    .match(/(\\d|\\w|\\s)+/g)) === null || _a === void 0 ? void 0 : _a.join('').replace(/\\s/g, '-').toLocaleLowerCase();\n}\n\nexport { cleanUpString as c, regexEncode as r };\n\n//# sourceMappingURL=string-utils-5695e07f.js.map"],"sourceRoot":""}