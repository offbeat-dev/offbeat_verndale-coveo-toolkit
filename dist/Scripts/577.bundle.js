"use strict";(self.webpackChunk_verndale_toolkit=self.webpackChunk_verndale_toolkit||[]).push([[577],{20577:function(c,e,n){n.r(e),n.d(e,{atomic_format_unit:function(){return s}});var r=n(51860),i=n(51093);const s=class{constructor(t){(0,r.r)(this,t),this.unitDisplay="short",this.format=(o,a)=>o.toLocaleString(a,{style:"unit",unit:this.unit,unitDisplay:this.unitDisplay})}componentWillLoad(){try{(0,i.d)((t,o)=>this.format(t,o),this.host)}catch(t){this.error=t}}render(){if(this.error)return(0,r.h)("atomic-component-error",{element:this.host,error:this.error})}get host(){return(0,r.g)(this)}}},51093:function(c,e,n){n.d(e,{a:function(){return s},d:function(){return i}});var r=n(22973);const i=(t,o)=>{const a=(0,r.b)("atomic/numberFormat",t);if(o.dispatchEvent(a))throw new Error("The Atomic number format component was not handled, as it is not a child of a compatible component")},s=(t,o)=>t.toLocaleString(o)}}]);

//# sourceMappingURL=577.bundle.js.map