{"version":3,"sources":["webpack://@verndale/toolkit/./node_modules/@coveo/atomic/dist/esm/atomic-format-currency.entry.js","webpack://@verndale/toolkit/./node_modules/@coveo/atomic/dist/esm/format-common-6bd72b23.js"],"names":[],"mappings":"mNAIA,KAAM,GAAuB,KAAM,CACjC,YAAY,EAAS,CACnB,QAAiB,KAAM,GACvB,KAAK,OAAS,CAAC,EAAO,IACb,EAAM,eAAe,EAAW,CACrC,MAAO,WACP,SAAU,KAAK,WAIrB,mBAAoB,CAClB,GAAI,CACF,QAA0B,CAAC,EAAO,IAAc,KAAK,OAAO,EAAO,GAAY,KAAK,YAE/E,EAAP,CACE,KAAK,MAAQ,GAGjB,QAAS,CACP,GAAI,KAAK,MACP,MAAQ,QAAE,yBAA0B,CAAE,QAAS,KAAK,KAAM,MAAO,KAAK,WAGtE,OAAO,CAAE,MAAO,QAAW,S,4FCzBjC,KAAM,GAA4B,CAAC,EAAW,IAAY,CACxD,KAAM,GAAQ,QAAiB,sBAAuB,GAEtD,GADiB,EAAQ,cAAc,GAErC,KAAM,IAAI,OAAM,uGAGd,EAAyB,CAAC,EAAO,IAAc,EAAM,eAAe","file":"scripts/7808.bundle.js","sourcesContent":["import { r as registerInstance, h, g as getElement } from './index-a326e2b3.js';\nimport { d as dispatchNumberFormatEvent } from './format-common-6bd72b23.js';\nimport './event-utils-5d69ba8f.js';\n\nconst AtomicFormatCurrency = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.format = (value, languages) => {\n      return value.toLocaleString(languages, {\n        style: 'currency',\n        currency: this.currency,\n      });\n    };\n  }\n  componentWillLoad() {\n    try {\n      dispatchNumberFormatEvent((value, languages) => this.format(value, languages), this.host);\n    }\n    catch (error) {\n      this.error = error;\n    }\n  }\n  render() {\n    if (this.error) {\n      return (h(\"atomic-component-error\", { element: this.host, error: this.error }));\n    }\n  }\n  get host() { return getElement(this); }\n};\n\nexport { AtomicFormatCurrency as atomic_format_currency };\n\n//# sourceMappingURL=atomic-format-currency.entry.js.map","import { b as buildCustomEvent } from './event-utils-5d69ba8f.js';\n\nconst dispatchNumberFormatEvent = (formatter, element) => {\n  const event = buildCustomEvent('atomic/numberFormat', formatter);\n  const canceled = element.dispatchEvent(event);\n  if (canceled) {\n    throw new Error('The Atomic number format component was not handled, as it is not a child of a compatible component');\n  }\n};\nconst defaultNumberFormatter = (value, languages) => value.toLocaleString(languages);\n\nexport { defaultNumberFormatter as a, dispatchNumberFormatEvent as d };\n\n//# sourceMappingURL=format-common-6bd72b23.js.map"],"sourceRoot":""}