"use strict";(self.webpackChunk_verndale_toolkit=self.webpackChunk_verndale_toolkit||[]).push([[9259],{29259:function(v,l,n){n.r(l),n.d(l,{atomic_result_number:function(){return _}});var i=n(51860),m=n(7941),h=n(24731),o=n(52276),a=n(51093),u=function(t,e,s,c){var f=arguments.length,r=f<3?e:c===null?c=Object.getOwnPropertyDescriptor(e,s):c,d;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(t,e,s,c);else for(var p=t.length-1;p>=0;p--)(d=t[p])&&(r=(f<3?d(r):f>3?d(e,s,r):d(e,s))||r);return f>3&&r&&Object.defineProperty(e,s,r),r};const _=class{constructor(t){(0,i.r)(this,t),this.formatter=a.a,this.valueToDisplay=null}setFormat(t){t.preventDefault(),t.stopPropagation(),this.formatter=t.detail}parseValue(){const t=m.k.getResultProperty(this.result,this.field);if(t===null)return null;const e=parseFloat(`${t}`);return Number.isNaN(e)?(this.error=new Error(`Could not parse "${t}" from field "${this.field}" as a number.`),null):e}formatValue(t){try{return this.formatter(t,this.bindings.i18n.languages)}catch(e){return this.error=e,t.toString()}}updateValueToDisplay(){const t=this.parseValue();t!==null&&(this.valueToDisplay=this.formatValue(t))}componentWillRender(){this.updateValueToDisplay()}render(){if(this.valueToDisplay===null){this.host.remove();return}return this.valueToDisplay}get host(){return(0,i.g)(this)}};u([(0,o.I)()],_.prototype,"bindings",void 0),u([(0,h.R)()],_.prototype,"result",void 0)},51093:function(v,l,n){n.d(l,{a:function(){return h},d:function(){return m}});var i=n(22973);const m=(o,a)=>{const u=(0,i.b)("atomic/numberFormat",o);if(a.dispatchEvent(u))throw new Error("The Atomic number format component was not handled, as it is not a child of a compatible component")},h=(o,a)=>o.toLocaleString(a)}}]);

//# sourceMappingURL=9259.bundle.js.map