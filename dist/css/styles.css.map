{"version":3,"sources":["webpack://@verndale/toolkit/./src/scss/core/_reset.scss","webpack://@verndale/toolkit/./src/scss/core/_colorpalette.scss","webpack://@verndale/toolkit/./src/scss/core/_variables.scss","webpack://@verndale/toolkit/./node_modules/sass-mq/_mq.scss","webpack://@verndale/toolkit/./src/scss/core/_typography.scss","webpack://@verndale/toolkit/./src/scss/core/_global.scss","webpack://@verndale/toolkit/./node_modules/@verndale/front-end-components/lib/C-FMT-1-accordions-module/_styles.scss","webpack://@verndale/toolkit/./node_modules/@verndale/front-end-components/lib/button/_styles.scss"],"names":[],"mappings":"AAAA,2ZAiFE,SACA,aACA,eAnFF,mBAsFE,wBAGF,8EAWE,cAGF,KACE,cAGF,MAEE,gBAGF,aAEE,YAGF,oDAIE,WACA,aAGF,MACE,yBACA,iBAGF,OACE,gBACA,SACA,eACA,aACA,UAGF,mBAGE,oDAGF,mBACE,6DAGF,uMAIE,aAGF,QACE,qDACA,yGACA,gBAGF,IACE,YACA,qCAGF,YAEE,eAGF,YACE,YACA,WAGF,mBACE,6DCjLF,MACE,iBCDF,MACE,wCACA,8BACA,0BC6KA,yBDhLF,MAMI,2BC0KF,0BDhLF,MASI,4BEPJ,KACE,gCACA,eACA,iBCLF,WLAA,cKEE,2CACA,wCAGF,wDAEE,aAGF,eACE,+BAEA,8BACE,+BCXJ,WACE,mBACA,gBH0KA,yBG5KF,WAKI,oBACA,kBAIJ,mBACE,mBHiKA,yBGlKF,mBAII,oBAIJ,kBACE,wCACA,eACA,gBACA,iBN1BF,gBGgLE,yBG1JF,kBAQI,eACA,kBHiJF,0BG1JF,kBAaI,gBH6IF,yBGzIF,wBAEI,4BAIJ,iBACE,yBAEA,kCACE,gBH+HF,yBGhIA,kCAII,iBAKN,yBACE,kEACA,6DACA,6BACA,SN7DF,gBM+DE,eACA,qDACA,YACA,6EACA,gBNnEF,iBMqEE,gBACA,gGACA,WHyGA,yBGvHF,yBAiBI,YN1EJ,eM6EI,8DAEE,yBAEA,oEACE,WAGF,0OAEE,WAMJ,wEACE,aAGF,yEACE,cAKN,uBACE,iCACA,eACA,gBACA,iBN3GF,SM6GE,0EAGF,yBACE,wCACA,eACA,gBACA,iBNpHF,gBGgLE,yBGhEF,yBAQI,eACA,kBHuDF,0BGhEF,yBAaI,gBAIJ,sBACE,kCACA,YACA,kBACA,WAGF,uDAEE,aACA,YACA,SACA,kBACA,QACA,sEACA,wEACA,WAGF,4BACE,aAGF,uBACE,SACA,gBACA,kBACA,gEAEA,qHAIE,WAIJ,yBACE,eACA,iBNxKF,sBGgLE,yBGVF,yBNtKA,yBMgLI,6KAKE,gBHLJ,sMGQM,iBAKN,sCACE,kBACA,mBAEA,2CNjMJ,YOIA,KACE,6DACA,SPNF,gBOQE,eACA,0EACA,eACA,gBACA,oEACA,gBPbF,uBOeE,kBACA,qBACA,sMAEA,SACE,YACA,kBACA,wEACA,WAGF,kBACE,yBACA,WAEA,sBACE,UAGF,gDAEE,yBAGF,+BACE,6BACA,yBACA,cAEA,mCACE,aAGF,0EAEE,yBACA,yBACA,WAEA,kFACE,UAKN,2DAEE,2BACA,cACA,oBAIJ,oBACE,sBACA,cAEA,wBACE,aAGF,oDAEE,yBACA,WAEA,4DACE,UAIJ,iCACE,6BACA,sBACA,WAEA,qCACE,UAGF,8EAEE,sBACA,cAEA,sFACE,aAKN,+DAEE,6BACA,yBACA,cACA,oBAIJ,gBACE,eACA,gBPrHJ","file":"css/styles.css","sourcesContent":["h1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  border: 0;\n  font: inherit;\n  font-size: 100%;\n  margin: 0;\n  padding: 0;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\n\nbody {\n  line-height: 1;\n}\n\nol,\nul {\n  list-style: none;\n}\n\nblockquote,\nq {\n  quotes: none;\n}\n\nblockquote::before,\nblockquote::after,\nq::before,\nq::after {\n  content: \"\";\n  content: none;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\nbutton {\n  background: none;\n  border: 0;\n  cursor: pointer;\n  font: inherit;\n  outline: 0;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\ninput[type=\"search\"] {\n  appearance: none;\n}\n\ninput[type=\"search\"]::-webkit-search-decoration,\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-results-button,\ninput[type=\"search\"]::-webkit-search-results-decoration {\n  display: none;\n}\n\npicture {\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\nimg {\n  height: auto;\n  object-fit: cover;\n}\n\npicture,\nimg {\n  max-width: 100%;\n}\n\npicture img {\n  height: 100%;\n  width: 100%;\n}\n\ninput[type=\"number\"] {\n  appearance: none;\n}\n",":root {\n  --focus: #5e9ed6;\n}\n",":root {\n  --primary-font: \"Questrial\", sans-serif;\n  --container-max-width: 1840px;\n  --container-padding: 20px;\n\n  @include mq(desktop) {\n    --container-padding: 80px;\n  }\n  @include mq(wide) {\n    --container-padding: 120px;\n  }\n}\n","@use 'sass:math';\n@use 'sass:map';\n@use 'sass:list';\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$breakpoints: (\n  mobile: 320px,\n  tablet: 740px,\n  desktop: 980px,\n  wide: 1300px,\n) !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width. For example: (mobile, tablet, desktop).\n///\n/// @example scss\n///   @use 'path/to/mq' with ($show-breakpoints: ('mobile', 'tablet', 'desktop'));\n///\n///\n/// @type map\n$show-breakpoints: () !default;\n\n/// Customize the media type (for example: `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// If you want to overried the media type, you can use this option.\n/// @example scss\n///   @use 'path/to/mq' with ($media-type: 'screen');\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and example\n$media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n///\n/// @example scss\n///  $font-size-in-ems: px2em(16px);\n///  p { font-size: px2em(16px); }\n///\n/// @returns {Number}\n\n@function px2em($px) {\n  @if math.is-unitless($px) {\n    @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n    @return px2em($px * 1px);\n  }\n  // if $px is compatible with em units, then return value unchanged\n  @if math.compatible($px, 1em) {\n    @return $px;\n  }\n  @return math.div($px, 16px) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $breakpoints\n///\n/// @example scss\n///  $tablet-width: get-breakpoint-width(tablet);\n///  @media (min-width: get-breakpoint-width(tablet)) {}\n///\n/// @requires {Variable} $breakpoints\n///\n/// @returns {Number} Value in pixels\n@function get-breakpoint-width($name, $breakpoints: $breakpoints) {\n  @if map.has-key($breakpoints, $name) {\n    @return map.get($breakpoints, $name);\n  } @else {\n    @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    @return null;\n  }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from [false] - One of $breakpoints\n/// @param {String | Boolean} $until [false] - One of $breakpoints\n/// @param {String | Boolean} $and [false] - Additional media query parameters\n/// @param {String} $media-type [$media-type] - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints [$breakpoints]\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $media-type\n/// @requires {Variable} $breakpoints\n/// @requires {function} px2em\n/// @requires {function} get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  @use 'path/to/mq' as *;\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n  $from: false,\n  $until: false,\n  $and: false,\n  $media-type: $media-type,\n  $breakpoints: $breakpoints\n) {\n  $min-width: 0;\n  $max-width: 0;\n  $media-query: '';\n\n  // From: this breakpoint (inclusive)\n  @if $from {\n    @if type-of($from) == number {\n      $min-width: px2em($from);\n    } @else {\n      $min-width: px2em(get-breakpoint-width($from, $breakpoints));\n    }\n  }\n\n  // Until: that breakpoint (exclusive)\n  @if $until {\n    @if type-of($until) == number {\n      $max-width: px2em($until);\n    } @else {\n      $max-width: px2em(get-breakpoint-width($until, $breakpoints)) - 0.01em;\n    }\n  }\n\n  @if $min-width != 0 {\n    $media-query: '#{$media-query} and (min-width: #{$min-width})';\n  }\n  @if $max-width != 0 {\n    $media-query: '#{$media-query} and (max-width: #{$max-width})';\n  }\n  @if $and {\n    $media-query: '#{$media-query} and #{$and}';\n  }\n\n  // Remove unnecessary media query prefix 'all and '\n  @if ($media-type == 'all' and $media-query != '') {\n    $media-type: '';\n    $media-query: str-slice(unquote($media-query), 6);\n  }\n\n  @media #{$media-type + $media-query} {\n    @content;\n  }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _quick-sort($list) {\n  $less: ();\n  $equal: ();\n  $large: ();\n\n  @if length($list) > 1 {\n    $seed: list.nth($list, math.ceil(math.div(length($list), 2)));\n\n    @each $item in $list {\n      @if ($item == $seed) {\n        $equal: list.append($equal, $item);\n      } @else if ($item < $seed) {\n        $less: list.append($less, $item);\n      } @else if ($item > $seed) {\n        $large: list.append($large, $item);\n      }\n    }\n\n    @return join(join(_quick-sort($less), $equal), _quick-sort($large));\n  }\n\n  @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _map-sort-by-value($map) {\n  $map-sorted: ();\n  $map-keys: map.keys($map);\n  $map-values: map.values($map);\n  $map-values-sorted: _quick-sort($map-values);\n\n  // Reorder key/value pairs based on key values\n  @each $value in $map-values-sorted {\n    $index: index($map-values, $value);\n    $key: list.nth($map-keys, $index);\n    $map-sorted: map.merge(\n      $map-sorted,\n      (\n        $key: $value,\n      )\n    );\n\n    // Unset the value in $map-values to prevent the loop\n    // from finding the same index twice\n    $map-values: list.set-nth($map-values, $index, 0);\n  }\n\n  @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $breakpoints\n///\n/// @example scss\n///  @include add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin add-breakpoint($name, $width) {\n  $new-breakpoint: (\n    $name: $width,\n  );\n  $breakpoints: map.merge($breakpoints, $new-breakpoint) !global;\n  $breakpoints: _map-sort-by-value($breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints [$show-breakpoints] - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints [$breakpoints] - Breakpoint names and sizes\n///\n/// @requires {Variable} $breakpoints\n/// @requires {Variable} $show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin show-breakpoints(\n  $show-breakpoints: $show-breakpoints,\n  $breakpoints: $breakpoints\n) {\n  body:before {\n    background-color: #fcf8e3;\n    border-bottom: 1px solid #fbeed5;\n    border-left: 1px solid #fbeed5;\n    color: #c09853;\n    font: small-caption;\n    padding: 3px 6px;\n    pointer-events: none;\n    position: fixed;\n    right: 0;\n    top: 0;\n    z-index: 100;\n\n    // Loop through the breakpoints that should be shown\n    @each $show-breakpoint in $show-breakpoints {\n      $width: get-breakpoint-width($show-breakpoint, $breakpoints);\n      @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n        content: '#{$show-breakpoint} ≥ #{$width} (#{px2em($width)})';\n      }\n    }\n  }\n}\n\n@if list.length($show-breakpoints) > 0 {\n  @include show-breakpoints;\n}\n","//Typography\n\nbody {\n  font-family: var(--primary-font);\n  font-size: 18px;\n  line-height: 1.78;\n}\n",".container {\n  margin: 0 auto;\n  max-inline-size: var(--container-max-width);\n  padding-inline: var(--container-padding);\n}\n\n*:focus:not(.focus-visible),\n*:focus:not(.focus-visible) {\n  outline: none;\n}\n\n.focus-visible {\n  outline: solid 2px var(--focus);\n\n  &:-moz-focusring {\n    outline: solid 2px var(--focus);\n  }\n}\n","@import\n\"../theme\",\n\"variables\";\n\n.accordion {\n  margin-bottom: $accordion-mobile-margin-bottom;\n  margin-top: $accordion-mobile-margin-top;\n\n  @include mq(desktop) {\n    margin-bottom: $accordion-desktop-margin-bottom;\n    margin-top: $accordion-desktop-margin-top;\n  }\n}\n\n.accordion__header {\n  margin-bottom: 29px;\n\n  @include mq(desktop) {\n    margin-bottom: 60px;\n  }\n}\n\n.accordion__title {\n  font-family: $accordion-item-title-font-family;\n  font-size: 30px;\n  font-weight: 700;\n  line-height: 1.13;\n  margin: 0 0 10px;\n\n  @include mq(desktop) {\n    font-size: 40px;\n    line-height: 1.09;\n  }\n\n  @include mq(wide) {\n    font-size: 44px;\n  }\n}\n\n.accordion__description {\n  @include mq(desktop) {\n    max-width: calc(66% - 51px);\n  }\n}\n\n.accordion__item {\n  border: $accordion-item-border;\n\n  & + .accordion__item {\n    margin-top: 20px;\n\n    @include mq(desktop) {\n      margin-top: 30px;\n    }\n  }\n}\n\n.accordion__item-trigger {\n  align-items: center;\n  appearance: none;\n  background-color: transparent;\n  border: 0;\n  border-radius: 0;\n  cursor: pointer;\n  display: flex;\n  height: auto;\n  justify-content: space-between;\n  min-height: 60px;\n  padding: 9px 20px;\n  text-align: left;\n  transition: background-color 0.2s ease-in-out;\n  width: 100%;\n\n  @include mq(desktop) {\n    height: 50px;\n    padding: 0 25px;\n\n    &:hover,\n    &:focus {\n      background-color: $accordion-item-focus-background;\n\n      h3 {\n        color: $accordion-item-focus-text-color;\n      }\n\n      .accordion__item-icon-plus,\n      .accordion__item-icon-minus {\n        fill: $accordion-item-focus-text-color;\n      }\n    }\n  }\n\n  &[aria-expanded=\"true\"] {\n    .accordion__item-icon-plus {\n      display: none;\n    }\n\n    .accordion__item-icon-minus {\n      display: block;\n    }\n  }\n}\n\n.accordion__item-title {\n  font-family: $accordion-item-font-family;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 1.78;\n  margin: 0;\n  transition: color 0.2s ease-in-out;\n}\n\n.accordion__item-heading {\n  font-family: $accordion-item-heading-font-family;\n  font-size: 21px;\n  font-weight: 700;\n  line-height: 1.19;\n  margin: 0 0 10px;\n\n  @include mq(desktop) {\n    font-size: 19px;\n    line-height: 1.33;\n  }\n\n  @include mq(wide) {\n    font-size: 24px;\n  }\n}\n\n.accordion__item-icon {\n  flex-shrink: 0;\n  height: 14px;\n  position: relative;\n  width: 14px;\n}\n\n.accordion__item-icon-plus,\n.accordion__item-icon-minus {\n  fill: $accordion-item-icon-fill;\n  height: 14px;\n  left: 50%;\n  position: absolute;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  transition: fill 0.2s ease-in-out;\n  width: 14px;\n}\n\n.accordion__item-icon-minus {\n  display: none;\n}\n\n.accordion__item-panel {\n  height: 0;\n  overflow: hidden;\n  visibility: hidden;\n  transition: height 0.25s ease;\n\n  video,\n  picture,\n  img,\n  iframe {\n    width: 100%;\n  }\n}\n\n.accordion__item-content {\n  font-size: 18px;\n  line-height: 1.78;\n  padding: 2px 20px 20px;\n\n  @include mq(desktop) {\n    padding: 28px 100px 45px;\n  }\n\n  * {\n    & + video,\n    & + picture,\n    & + img,\n    & + iframe,\n    & + .buttons-row {\n      margin-top: 20px;\n\n      @include mq(desktop) {\n        margin-top: 60px;\n      }\n    }\n  }\n\n  .buttons-row {\n    margin-left: -10px;\n    margin-right: -10px;\n\n    .btn {\n      margin: 10px;\n    }\n  }\n}\n","@import\n\"../theme\",\n\"variables\";\n\n.btn {\n  appearance: none;\n  border: 0;\n  border-radius: 0;\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 18px;\n  font-weight: 600;\n  justify-content: center;\n  min-width: 200px;\n  padding: 12px 24px 14px;\n  text-align: center;\n  text-decoration: none;\n  transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out;\n\n  svg {\n    height: 30px;\n    margin-right: 17px;\n    transition: fill 0.2s ease-in-out;\n    width: 30px;\n  }\n\n  &.btn--primary {\n    background-color: $btn-primary-background;\n    color: $btn-primary-text-color;\n\n    svg {\n      fill: $btn-primary-text-color;\n    }\n\n    &:hover,\n    &:focus {\n      background-color: $btn-primary-focus-background;\n    }\n\n    &.btn--outline {\n      background-color: transparent;\n      border: $btn-primary-outline-border;\n      color: $btn-primary-outline-text-color;\n\n      svg {\n        fill: $btn-primary-outline-text-color;\n      }\n\n      &:hover,\n      &:focus {\n        background-color: $btn-primary-outline-focus-background;\n        border: $btn-primary-outline-focus-border;\n        color: $btn-primary-outline-focus-text-color;\n\n        svg {\n          fill: $btn-primary-outline-focus-text-color;\n        }\n      }\n    }\n\n    &:disabled,\n    &.btn--disabled {\n      background-color: $btn-primary-disabled-background;\n      color: $btn-primary-disabled-text-color;\n      pointer-events: none;\n    }\n  }\n\n  &.btn--secondary {\n    background-color: $btn-secondary-background;\n    color: $btn-secondary-text-color;\n\n    svg {\n      fill: $btn-secondary-text-color;\n    }\n\n    &:hover,\n    &:focus {\n      background-color: $btn-secondary-focus-background;\n      color: $btn-secondary-focus-text-color;\n\n      svg {\n        fill: $btn-secondary-focus-text-color;\n      }\n    }\n\n    &.btn--outline {\n      background-color: transparent;\n      border: $btn-secondary-outline-border;\n      color: $btn-secondary-outline-text-color;\n\n      svg {\n        fill: $btn-secondary-outline-text-color;\n      }\n\n      &:hover,\n      &:focus {\n        background-color: $btn-secondary-outline-focus-background;\n        color: $btn-secondary-outline-focus-text-color;\n\n        svg {\n          fill: $btn-secondary-outline-focus-text-color;\n        }\n      }\n    }\n\n    &:disabled,\n    &.btn--disabled {\n      background-color: transparent;\n      border: $btn-secondary-disabled-border;\n      color: $btn-secondary-disabled-text-color;\n      pointer-events: none;\n    }\n  }\n\n  &.btn--small {\n    font-size: 14px;\n    min-width: 100px;\n    padding: 5px 20px;\n  }\n}\n"],"sourceRoot":""}