{"version":3,"sources":["webpack://@verndale/toolkit/./node_modules/@coveo/atomic/dist/esm/atomic-external.entry.js"],"names":[],"mappings":"uNAIA,KAAM,GAAiB,KAAM,CAC3B,YAAY,EAAS,CACnB,QAAiB,KAAM,GAIvB,KAAK,SAAW,0BAElB,qBAAqB,EAAO,CAC1B,EAAM,iBACN,EAAM,kBACN,KAAK,UAAU,cAAc,QAAiB,IAAqB,EAAM,SAE3E,kBAAkB,EAAO,CACvB,EAAM,iBACN,EAAM,kBACN,KAAK,UAAU,cAAc,QAAiB,qBAAsB,EAAM,YAExE,YAAY,CACd,KAAM,GAAU,SAAS,cAAc,KAAK,UAC5C,GAAI,CAAC,EACH,KAAM,IAAI,OAAM,gDAAgD,KAAK,aAEvE,MAAO","file":"scripts/4589.bundle.js","sourcesContent":["import { r as registerInstance } from './index-a326e2b3.js';\nimport { b as buildCustomEvent } from './event-utils-5d69ba8f.js';\nimport { a as initializeEventName } from './initialization-utils-7c6915b8.js';\n\nconst AtomicExternal = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The CSS selector that identifies the `atomic-search-interface` component with which to initialize the external components.\n     */\n    this.selector = 'atomic-search-interface';\n  }\n  handleInitialization(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.interface.dispatchEvent(buildCustomEvent(initializeEventName, event.detail));\n  }\n  handleScrollToTop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.interface.dispatchEvent(buildCustomEvent('atomic/scrollToTop', event.detail));\n  }\n  get interface() {\n    const element = document.querySelector(this.selector);\n    if (!element) {\n      throw new Error(`Cannot find interface element with selector \"${this.selector}\"`);\n    }\n    return element;\n  }\n};\n\nexport { AtomicExternal as atomic_external };\n\n//# sourceMappingURL=atomic-external.entry.js.map"],"sourceRoot":""}