{"version":3,"sources":["webpack://@verndale/toolkit/./node_modules/@coveo/atomic/dist/esm/atomic-search-layout.entry.js"],"names":[],"mappings":"sOAKA,WAAqB,EAAS,EAAS,CACrC,MAAO,GAAQ,cAAc,EAAgB,IAE/C,WAAyB,EAAS,CAChC,MAAO,kCAAkC,MAG3C,WAA2B,EAAS,EAAkB,CAEpD,KAAM,GAAiB,wBADZ,EAAQ,KAEb,EAAsB,mGACtB,EAAqB,sCAAsC,KAC3D,EAAU,GAAG,sBACb,EAAS,IAAM,CACnB,KAAM,GAAgB,EAAY,EAAS,UACrC,EAAc,EAAY,EAAS,QACzC,GAAI,CAAC,GAAiB,CAAC,EACrB,MAAO,GAET,KAAM,GAAY,EAAc,UAAY,QACtC,EAAY,EAAc,UAAY,QACtC,EAAU,EAAY,UAAY,MAClC,EAAU,EAAY,UAAY,QACxC,MAAO,GAAG;AAAA,QACN;AAAA;AAAA;AAAA;AAAA;AAAA,uBAKe,MAAc,aAAqB,MAAY;AAAA;AAAA;AAAA;AAAA,QAI9D,KAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOvB,KAAuB,KAAkB,EAAgB;AAAA;AAAA;AAAA,QAKzD,EAAS,IAAM,CACnB,KAAM,GAAgB,EAAY,EAAS,UAK3C,GAJI,CAAC,GAID,CADiB,EAAc,cAAc,wBAE/C,MAAO,GAET,KAAM,GAAiB,GAAG,KAAkB,EAAgB,YAC5D,MAAO,GAAG;AAAA;AAAA;AAAA;AAAA,MAIR;AAAA,OACC;AAAA;AAAA;AAAA;AAAA,QAIC;AAAA;AAAA;AAAA,QAKN,MAAO,CAAC,EAAS,IAAU,KACxB,OAAQ,GAAgB,IAAgB,IACxC,KAAK;AAAA;AAAA,GAGV,KAAM,GAAwB;AAAA;AAAA;AAAA,27CAExB,EAAqB,KAAM,CAC/B,YAAY,EAAS,CACnB,QAAiB,KAAM,GAKvB,KAAK,iBAAmB,SAE1B,kBAAmB,CACjB,KAAM,GAAK,KAAK,KAAK,IAAM,QAAS,yBACpC,KAAK,KAAK,GAAK,EACf,KAAM,GAAW,SAAS,cAAc,SACxC,EAAS,UAAY,EAAkB,KAAK,KAAM,KAAK,kBACvD,KAAK,KAAK,YAAY,MAEpB,OAAO,CAAE,MAAO,QAAW,QAEjC,EAAmB,MAAQ","file":"scripts/2905.bundle.js","sourcesContent":["import { r as registerInstance, g as getElement } from './index-a326e2b3.js';\nimport { r as randomID } from './utils-2f0ee174.js';\nimport './purify-e45d59ef.js';\nimport './_commonjsHelpers-5ec8f9b7.js';\n\nfunction findSection(element, section) {\n  return element.querySelector(sectionSelector(section));\n}\nfunction sectionSelector(section) {\n  return `atomic-layout-section[section=\"${section}\"]`;\n}\n\nfunction buildSearchLayout(element, mobileBreakpoint) {\n  const id = element.id;\n  const layoutSelector = `atomic-search-layout#${id}`;\n  const cleanStatusSelector = 'atomic-search-interface:not(.atomic-search-interface-no-results, .atomic-search-interface-error)';\n  const mediaQuerySelector = `@media only screen and (min-width: ${mobileBreakpoint})`;\n  const display = `${layoutSelector} { display: grid }`;\n  const facets = () => {\n    const facetsSection = findSection(element, 'facets');\n    const mainSection = findSection(element, 'main');\n    if (!facetsSection || !mainSection) {\n      return '';\n    }\n    const facetsMin = facetsSection.minWidth || '17rem';\n    const facetsMax = facetsSection.maxWidth || '22rem';\n    const mainMin = mainSection.minWidth || '50%';\n    const mainMax = mainSection.maxWidth || '70rem';\n    return `${mediaQuerySelector} {\n      ${layoutSelector} {\n        grid-template-areas:\n        '. .                     atomic-section-search .'\n        '. atomic-section-main   atomic-section-main   .';\n        grid-template-columns: \n          1fr minmax(${facetsMin}, ${facetsMax}) minmax(${mainMin}, ${mainMax}) 1fr;\n        column-gap: var(--atomic-layout-spacing-x);\n      }\n\n      ${cleanStatusSelector} ${layoutSelector} {\n        grid-template-areas:\n          '. .                     atomic-section-search .'\n          '. atomic-section-facets atomic-section-main   .'\n          '. atomic-section-facets .                     .';\n      }\n\n      ${cleanStatusSelector} ${layoutSelector} ${sectionSelector('facets')} {\n        display: block;\n      }\n    }`;\n  };\n  const refine = () => {\n    const statusSection = findSection(element, 'status');\n    if (!statusSection) {\n      return '';\n    }\n    const refineToggle = statusSection.querySelector('atomic-refine-toggle');\n    if (!refineToggle) {\n      return '';\n    }\n    const statusSelector = `${layoutSelector} ${sectionSelector('status')}`;\n    return `${statusSelector} atomic-sort-dropdown {\n      display:none;\n    }\n\n    ${mediaQuerySelector} {\n     ${statusSelector} atomic-sort-dropdown {\n       display:block;\n      }\n\n      ${statusSelector} atomic-refine-toggle {\n        display: none;\n       }\n    }`;\n  };\n  return [display, facets(), refine()]\n    .filter((declaration) => declaration !== '')\n    .join('\\n\\n');\n}\n\nconst atomicSearchLayoutCss = \".atomic-modal-opened{overflow-y:hidden}atomic-layout-section[section='search']{grid-area:atomic-section-search}atomic-layout-section[section='facets']{grid-area:atomic-section-facets}atomic-layout-section[section='main']{grid-area:atomic-section-main}atomic-layout-section[section='status']{grid-area:atomic-section-status}atomic-layout-section[section='pagination']{grid-area:atomic-section-pagination}atomic-search-layout{width:100%;height:100%;display:none;grid-template-areas:'. atomic-section-search .'\\n    '. atomic-section-main .';grid-template-columns:var(--atomic-layout-spacing-x) minmax(18rem, 1fr) var(--atomic-layout-spacing-x)}atomic-search-layout atomic-layout-section[section='search']{margin:var(--atomic-layout-spacing-y) 0}atomic-search-layout atomic-layout-section[section='facets']{display:none}atomic-search-layout atomic-layout-section[section='facets'] *{margin-bottom:var(--atomic-layout-spacing-y)}atomic-search-layout atomic-layout-section[section='main']{margin-bottom:var(--atomic-layout-spacing-y)}atomic-search-layout atomic-layout-section[section='status']{display:grid;justify-content:space-between;grid-template-areas:'atomic-breadbox      atomic-breadbox'\\n      'atomic-query-summary atomic-sort'\\n      'atomic-did-you-mean  atomic-did-you-mean'}atomic-search-layout atomic-layout-section[section='status']>*{margin-bottom:var(--atomic-layout-spacing-y)}atomic-search-layout atomic-layout-section[section='status'] atomic-breadbox{grid-area:atomic-breadbox}atomic-search-layout atomic-layout-section[section='status'] atomic-query-summary{grid-area:atomic-query-summary;align-self:center;overflow:hidden;min-width:12rem}atomic-search-layout atomic-layout-section[section='status'] atomic-sort-dropdown{grid-area:atomic-sort;justify-self:end}atomic-search-layout atomic-layout-section[section='status'] atomic-refine-toggle{grid-area:atomic-sort}atomic-search-layout atomic-layout-section[section='status'] atomic-did-you-mean{grid-area:atomic-did-you-mean}atomic-search-layout atomic-layout-section[section='results'] atomic-smart-snippet{margin-bottom:1.5rem}atomic-search-layout atomic-layout-section[section='results'] atomic-smart-snippet-suggestions{margin-bottom:1.5rem}atomic-search-layout atomic-layout-section[section='pagination']{display:flex;flex-direction:column;justify-content:space-between;align-items:center}atomic-search-layout atomic-layout-section[section='pagination'] atomic-load-more-results{width:100%}atomic-search-layout atomic-layout-section[section='pagination']>*{margin-top:var(--atomic-layout-spacing-y)}@media only screen and (min-width: 50rem){atomic-search-layout atomic-layout-section[section='pagination']{flex-direction:row}}\";\n\nconst AtomicSearchLayout = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * CSS valuethat defines where the layout goes from mobile to desktop.\n     * e.g., 800px, 65rem.\n     */\n    this.mobileBreakpoint = '1024px';\n  }\n  componentDidLoad() {\n    const id = this.host.id || randomID('atomic-search-layout-');\n    this.host.id = id;\n    const styleTag = document.createElement('style');\n    styleTag.innerHTML = buildSearchLayout(this.host, this.mobileBreakpoint);\n    this.host.appendChild(styleTag);\n  }\n  get host() { return getElement(this); }\n};\nAtomicSearchLayout.style = atomicSearchLayoutCss;\n\nexport { AtomicSearchLayout as atomic_search_layout };\n\n//# sourceMappingURL=atomic-search-layout.entry.js.map"],"sourceRoot":""}