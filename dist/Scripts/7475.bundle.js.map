{"version":3,"sources":["webpack://@verndale/toolkit/./node_modules/@coveo/atomic/dist/esm/atomic-icon.entry.js"],"names":[],"mappings":"yOAOA,KAAM,GAAgB,6RAEtB,GAAI,GAAoD,SAAU,EAAY,EAAQ,EAAK,EAAM,CAC/F,GAAI,GAAI,UAAU,OAAQ,EAAI,EAAI,EAAI,EAAS,IAAS,KAAO,EAAO,OAAO,yBAAyB,EAAQ,GAAO,EAAM,EAC3H,GAAI,MAAO,UAAY,UAAY,MAAO,SAAQ,UAAa,WAC7D,EAAI,QAAQ,SAAS,EAAY,EAAQ,EAAK,OAE9C,QAAS,GAAI,EAAW,OAAS,EAAG,GAAK,EAAG,IACtC,GAAI,EAAW,KACjB,GAAK,GAAI,EAAI,EAAE,GAAK,EAAI,EAAI,EAAE,EAAQ,EAAK,GAAK,EAAE,EAAQ,KAAS,GACzE,MAAO,GAAI,GAAK,GAAK,OAAO,eAAe,EAAQ,EAAK,GAAI,GAE9D,KAAM,GAAa,KAAM,CACvB,YAAY,EAAS,CACnB,QAAiB,KAAM,GACvB,KAAK,IAAM,UAEP,WAAU,EAAK,CACnB,GAAI,CAEF,KAAM,GAAW,KAAM,OAAM,GAC7B,GAAI,EAAS,SAAW,KAAO,EAAS,SAAW,IACjD,KAAM,IAAI,OAAM,6BAA6B,sBAAwB,EAAS,WAAW,EAAS,gBAEpG,MAAO,MAAM,GAAS,aAEjB,EAAP,CACE,YAAK,MAAQ,EACb,QAAY,MACL,WAGL,UAAU,CACd,KAAM,GAAM,QAAc,KAAK,KAAM,KAAK,SAAS,MAAM,IAAI,mBACvD,EAAM,EAAM,KAAM,MAAK,UAAU,GAAO,KAAK,KAMnD,MALqB,GACjB,aAAgB,EAAK,CACrB,aAAc,CAAE,IAAK,GAAM,WAAY,MAEvC,UAGA,aAAa,CACjB,KAAM,GAAa,KAAK,UACxB,KAAK,IAAM,KAAM,GAEnB,YAAa,CACX,KAAK,aAEP,QAAS,CACP,GAAI,KAAK,MAAO,CAEd,QAAQ,MAAM,KAAK,MAAO,KAAK,MAC/B,KAAK,KAAK,SACV,OAGF,MAAO,QAAE,IAAM,CAAE,UAAW,KAAK,gBAExB,aAAa,CAAE,MAAO,CAAC,aAC9B,OAAO,CAAE,MAAO,QAAW,gBACpB,WAAW,CAAE,MAAO,CAC7B,KAAQ,CAAC,iBAGb,EAAW,CACT,WACC,EAAW,UAAW,WAAY,QACrC,EAAW,MAAQ","file":"scripts/7475.bundle.js","sourcesContent":["import { r as registerInstance, f as forceUpdate, h, g as getElement, H as Host } from './index-a326e2b3.js';\nimport { h as parseAssetURL } from './utils-2f0ee174.js';\nimport { p as purify } from './purify-e45d59ef.js';\nimport { I as InitializeBindings } from './initialization-utils-7c6915b8.js';\nimport './_commonjsHelpers-5ec8f9b7.js';\nimport './event-utils-5d69ba8f.js';\n\nconst atomicIconCss = \"atomic-icon{display:inline-block;fill:currentColor;aspect-ratio:1 / 1;height:auto}@supports not (aspect-ratio: 1 / 1){atomic-icon{height:auto}}atomic-icon>svg{width:100%;max-height:100%;aspect-ratio:1 / 1;height:auto}@supports not (aspect-ratio: 1 / 1){atomic-icon>svg{height:auto}}\";\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst AtomicIcon = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.svg = null;\n  }\n  async fetchIcon(url) {\n    try {\n      // deepcode ignore Ssrf: client side code\n      const response = await fetch(url);\n      if (response.status !== 200 && response.status !== 304) {\n        throw new Error(`Could not fetch icon from ${url}, got status code ${response.status} (${response.statusText}).`);\n      }\n      return await response.text();\n    }\n    catch (e) {\n      this.error = e;\n      forceUpdate(this);\n      return null;\n    }\n  }\n  async getIcon() {\n    const url = parseAssetURL(this.icon, this.bindings.store.get('iconAssetsPath'));\n    const svg = url ? await this.fetchIcon(url) : this.icon;\n    const sanitizedSvg = svg\n      ? purify.sanitize(svg, {\n        USE_PROFILES: { svg: true, svgFilters: true },\n      })\n      : null;\n    return sanitizedSvg;\n  }\n  async updateIcon() {\n    const svgPromise = this.getIcon();\n    this.svg = await svgPromise;\n  }\n  initialize() {\n    this.updateIcon();\n  }\n  render() {\n    if (this.error) {\n      // deepcode ignore FormatString: client-side code.\n      console.error(this.error, this.host);\n      this.host.remove();\n      return;\n    }\n    // deepcode ignore ReactSetInnerHtml: This is not React code, deepcode ignore DOMXSS: Value escaped in upstream code\n    return h(Host, { innerHTML: this.svg });\n  }\n  static get assetsDirs() { return [\"assets\"]; }\n  get host() { return getElement(this); }\n  static get watchers() { return {\n    \"icon\": [\"updateIcon\"]\n  }; }\n};\n__decorate([\n  InitializeBindings()\n], AtomicIcon.prototype, \"bindings\", void 0);\nAtomicIcon.style = atomicIconCss;\n\nexport { AtomicIcon as atomic_icon };\n\n//# sourceMappingURL=atomic-icon.entry.js.map"],"sourceRoot":""}