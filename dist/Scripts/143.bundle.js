"use strict";(self.webpackChunk_verndale_toolkit=self.webpackChunk_verndale_toolkit||[]).push([[143],{30143:function(a,r,i){i.r(r),i.d(r,{atomic_format_number:function(){return e}});var o=i(51860),m=i(51093);const e=class{constructor(t){(0,o.r)(this,t),this.format=(n,s)=>n.toLocaleString(s,{minimumIntegerDigits:this.minimumIntegerDigits,minimumFractionDigits:this.minimumFractionDigits,maximumFractionDigits:this.maximumFractionDigits,minimumSignificantDigits:this.minimumSignificantDigits,maximumSignificantDigits:this.maximumSignificantDigits})}componentWillLoad(){try{(0,m.d)((t,n)=>this.format(t,n),this.host)}catch(t){this.error=t}}render(){if(this.error)return(0,o.h)("atomic-component-error",{element:this.host,error:this.error})}get host(){return(0,o.g)(this)}}},51093:function(a,r,i){i.d(r,{a:function(){return e},d:function(){return m}});var o=i(22973);const m=(t,n)=>{const s=(0,o.b)("atomic/numberFormat",t);if(n.dispatchEvent(s))throw new Error("The Atomic number format component was not handled, as it is not a child of a compatible component")},e=(t,n)=>t.toLocaleString(n)}}]);

//# sourceMappingURL=143.bundle.js.map